#! /bin/sh
# /etc/init.d/charliebert

### BEGIN INIT INFO
# Provides:          charliebert
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Simple script to start charliebert at boot
# Description:       A simple script which will start / stop 'python charliebert.py' at boot / shutdown.
### END INIT INFO

CHARLIEBERT_PATH=/home/toma/Documents/prog/charliebert/charliebert
CHARLIEBERT_USER=toma

# Carry out specific functions when asked to by the system
case "$1" in
  start)
    echo "Starting charliebert"
    rm $CHARLIEBERT_PATH/CHARLIEBERT_STOP 2> /dev/null
    su - $CHARLIEBERT_USER -c "
      cd $CHARLIEBERT_PATH
      mv charliebert_output charliebert_output_old
      date >> charliebert_startups
      /usr/bin/python charliebert.py > charliebert_output 2>&1 &
    "
    ;;
  stop)
    echo "Stopping charliebert"
    # This unfortunately does not work (as SIGINT cannot be sent to a background process)
    #/usr/bin/pkill --signal SIGINT -f "python charliebert.py"

    # Brute-force approach
    #/usr/bin/pkill --signal SIGTERM -f "python charliebert.py"

    # Workaround with a local file used as killswitch
    su - $CHARLIEBERT_USER -c "
      cd $CHARLIEBERT_PATH
      touch CHARLIEBERT_STOP
    "
    ;;
  status)
    su - $CHARLIEBERT_USER -c "
      cd $CHARLIEBERT_PATH
      running="0"
      if [[ -e PID_CHARLIEBERT ]]
      then
        running="1"
      fi

      if [[ $running = "1" ]]
      then
        echo 'charliebert is running'
      else
        echo 'charliebert is not running'
      fi
    "
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: /etc/init.d/charliebert {start|stop|status|restart}"
    exit 1
    ;;
esac

exit 0
